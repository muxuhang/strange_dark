{"version":3,"sources":["webpack:///./src/pages/QuillDemo.js"],"names":["ImageResize","ReactQuill","Quill","window","require","default","register","ImageExtend","QuillDemo","quillRef","useRef","readRef","useState","setContent","visible","setVisible","latex","setLatex","useEffect","katex","modules","useMemo","toolbar","container","handlers","image","QuillWatch","emit","current","editor","id","formula","print","iframe","document","getElementById","createElement","el","getElementsByClassName","doc","setAttribute","body","appendChild","contentWindow","write","innerHTML","close","focus","setTimeout","navigator","userAgent","indexOf","removeChild","imageResize","imageExtend","_changeLatex","readQuill","result","insertEmbed","setContents","_saveLatexToImage","a","dom","querySelector","html2canvas","then","canvas","oldCanvas","parentElement","oldImage","Image","src","toDataURL","quill","range","getSelection","index","length","insertText","setSelection","_saveLatex","title","onOk","okText","cancelText","onCancel","value","placeholder","style","marginBottom","onChange","e","target","theme","ref","readOnly","description","imageStyle","height","marginTop"],"mappings":"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","file":"component---src-pages-quill-demo-js-1692279ebaa982d464ac.js","sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport 'react-quill/dist/quill.snow.css';\nimport katex from \"katex\";\nimport 'katex/dist/katex.css';\nimport './../components/quill/quill.css';\nimport html2canvas from 'html2canvas'\nimport { Button, Empty, Input, Modal } from \"antd\";\nimport { ImageExtend, QuillWatch } from \"../components/quill/ImageExtend\";\nlet ImageResize, ReactQuill, Quill\nif (typeof window !== 'undefined') {\n  ReactQuill = require('react-quill');\n  Quill = ReactQuill.Quill;\n  window.Quill = Quill\n}\nif (typeof window !== 'undefined' && window.Quill) {\n  ImageResize = require(\"quill-image-resize-module\").default;\n  Quill.register('modules/imageResize', ImageResize);\n  Quill.register('modules/imageExtend', ImageExtend);\n}\n// 固定样式 大标题、小标题、分类标题、题目，内容(完成)\n// 字体 加粗、斜体、下划线(完成)\n// 图片 可编辑大小(完成)\n// 图片 可复制添加(完成)\n// katex语法(完成)\n// katex语法转生成图片(完成)\n// 图片文字同时复制，或者多图片复制\n// 添加选项\n// 添加答案\nconst QuillDemo = () => {\n  if (typeof window === 'undefined' || !window.Quill) return <></>\n  const quillRef = useRef()\n  const readRef = useRef()\n  const [content, setContent] = useState('')\n  const [visible, setVisible] = useState(false)\n  const [latex, setLatex] = useState('')\n  useEffect(() => {\n    window.katex = katex\n  }, [])\n  const modules = useMemo(() => ({\n    toolbar: {\n      container: [\n        ['bold', 'italic', 'underline', 'strike'],\n        // ['blockquote', 'code-block'],\n        [{ 'header': 1 }, { 'header': 2 }],\n        [{ 'script': 'sub' }, { 'script': 'super' }],\n        [{ 'color': [] }],\n        [{ 'align': [] }],\n        ['image', 'formula'],\n        ['print'],\n      ],\n      handlers: {\n        image: () => {  // 劫持原来的图片点击按钮事件\n          QuillWatch.emit(quillRef.current.editor.id)\n        },\n        formula: () => {\n          setVisible(true)\n        },\n        print: () => {\n          var iframe = document.getElementById(\"print_iframe\")\n          if (!iframe) iframe = document.createElement('IFRAME');\n          var el = document.getElementById(\"quill\").getElementsByClassName('ql-editor');\n          var doc = null;\n          iframe.setAttribute(\"id\", \"print_iframe\");\n          iframe.setAttribute('style', 'position:absolute;width:0px;height:0px;left:-500px;top:-500px;');\n          document.body.appendChild(iframe);\n          doc = iframe.contentWindow.document;\n          doc.write(el[0].innerHTML);\n          doc.close();\n          iframe.contentWindow.focus();\n          setTimeout(function () { iframe.contentWindow.print(); }, 50)  //解决第一次样式不生效的问题\n          if (navigator.userAgent.indexOf(\"MSIE\") > 0) {\n            document.body.removeChild(iframe);\n          }\n        }\n      }\n    },\n    imageResize: true,\n    imageExtend: {}\n  }), [])\n  useEffect(() => {\n    _changeLatex()\n  }, [latex])\n  const _changeLatex = () => {\n    if (!latex) return\n    const readQuill = readRef.current.editor\n    const result = readQuill.insertEmbed(0, 'formula', latex);\n    readQuill.setContents(result)\n  }\n  const _saveLatexToImage = async () => {\n    const dom = document.querySelector(\"#read_latex .ql-editor p\")\n    html2canvas(dom, {}).then(canvas => {\n      const oldCanvas = document.getElementById('read_canvas')\n      if (oldCanvas) {\n        oldCanvas.parentElement.removeChild(oldCanvas)\n      }\n      canvas.id = 'read_canvas'\n      document.body.appendChild(canvas)\n      const oldImage = document.getElementById('read_image')\n      if (oldImage) {\n        oldImage.parentElement.removeChild(oldImage)\n      }\n      var image = new Image();\n      image.src = canvas.toDataURL(\"image/png\");\n      image.id = 'read_image'\n      const quill = quillRef.current.editor\n      const range = quill.getSelection(true)\n      if (range != null) {\n        var index = range.index + range.length;\n        // -------------------------  //\n        quill.insertEmbed(index, 'image', image.src);\n        quill.insertText(index + 1, ' ');\n        quill.setSelection(index + 2);\n        setLatex('')\n        setVisible(false)\n      }\n    });\n  }\n  const _saveLatex = async () => {\n    // latex 格式\n    const quill = quillRef.current.editor\n    const range = quill.getSelection(true)\n    if (range != null) {\n      var index = range.index + range.length;\n      quill.insertEmbed(index, 'formula', latex);\n      quill.insertText(index + 1, ' ');\n      quill.setSelection(index + 2);\n      setLatex('')\n      setVisible(false)\n    }\n  }\n  const _fetchLatex = async (latex) => {\n    if (!latex) return\n    try {\n      const res = await fetch('http://0.0.0.0:3001/tex2mathml', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tex: latex\n        })\n      })\n      const data = await res.json()\n    } catch (error) {\n\n    }\n  }\n  const renderFormula = () => {\n    return <Modal\n      title=\"Latex\"\n      visible={visible}\n      onOk={_saveLatexToImage}\n      okText='保存为图片'\n      cancelText='保存为公式'\n      onCancel={_saveLatex}\n    >\n      <Input\n        value={latex}\n        placeholder=\"latex\"\n        style={{ marginBottom: 10 }}\n        onChange={(e) => setLatex(e.target.value)}></Input>\n      {!latex ? <Empty\n        description='latex'\n        imageStyle={{ height: 50 }}></Empty> :\n        <ReactQuill\n          theme=\"bubble\"\n          ref={readRef}\n          id='read_latex'\n          readOnly\n          onChange={setContent}\n        ></ReactQuill>}\n    </Modal>\n  }\n  return (\n    <Layout title={'QuillDemo'}>\n      {renderFormula()}\n      <ReactQuill\n        theme=\"snow\"\n        ref={quillRef}\n        id=\"quill\"\n        style={{ height: 'calc(100vh - 202px)', marginTop: 15 }}\n        onChange={setContent}\n        modules={modules}\n      >\n      </ReactQuill>\n    </Layout >\n  )\n}\n\nexport default QuillDemo\n"],"sourceRoot":""}