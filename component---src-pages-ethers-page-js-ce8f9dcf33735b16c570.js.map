{"version":3,"sources":["webpack:///./src/utils/eths.ts","webpack:///./src/pages/EthersPage.js"],"names":["getEthereum","ethereum","window","message","destroy","error","connectWallet","a","request","method","accounts","account","localStorage","setItem","warning","listenAccountsChanged","on","chainId","location","reload","history","go","eths","EthersPage","useState","walletAddress","setWalletAddress","useEffect","addEventListener","walletChange","removeEventListener","console","log","getItem","wallet","title","onClick"],"mappings":"mMAKMA,EAAc,WAClB,IACMC,EADWC,OACID,SACrB,OAAKA,IACHE,IAAQC,eACRD,IAAQE,MAAM,oBAMZC,EAAa,uCAAG,gCAAAC,EAAA,sEAEZN,EAAWD,IAFC,SAGKC,EAASO,QAAQ,CAAEC,OAAQ,wBAHhC,cAGZC,EAHY,OAIZC,EAAUD,EAAS,GACzBE,aAAaC,QAAQ,SAAUF,GALb,kBAMXA,GANW,yCAQlBR,IAAQC,UACRD,IAAQW,QAAQ,sEATE,kBAUX,IAVW,0DAAH,qDAabC,EAAqB,uCAAG,4BAAAR,EAAA,yDACtBN,EAAWD,IADW,iEAGtBC,EAASe,GAAG,kBAAZ,uCAA+B,WAAON,GAAP,eAAAH,EAAA,sDAC7BI,EAAUD,EAAS,GACzBE,aAAaC,QAAQ,SAAUF,GAFI,2CAA/B,uDAHsB,uBAOtBV,EAASe,GAAG,eAAZ,uCAA4B,WAAOC,GAAP,SAAAV,EAAA,6DAChCL,OAAOgB,SAASC,SADgB,SAE1BjB,OAAOkB,QAAQC,GAAG,GAFQ,2CAA5B,uDAPsB,2CAAH,qDAiBZC,EALF,CACXtB,cACAM,gBACAS,yBCTaQ,UA/BI,WACjB,MAA0CC,mBAAS,IAA5CC,EAAP,KAAsBC,EAAtB,KACAC,qBAAU,WACRL,EAAKP,0BACJ,IACHY,qBAAU,WAER,OADAzB,OAAO0B,iBAAiB,UAAWC,GAC5B,WACL3B,OAAO4B,oBAAoB,UAAWD,MAEvC,IACH,IAAMA,EAAY,uCAAG,4BAAAtB,EAAA,6DACnBwB,QAAQC,IAAI,UADO,SAEEpB,aAAaqB,QAAQ,UAFvB,OAEbC,EAFa,OAGnBR,EAAiBQ,GAHE,2CAAH,qDAKlB,OACE,kBAAC,IAAD,CAAQC,MAAO,cACZV,EACD,kBAAC,IAAD,CAAQW,QAAO,sBAAE,4BAAA7B,EAAA,sEACMe,EAAKhB,gBADX,OACT4B,EADS,OAEfR,EAAiBQ,GAFF,4CAAjB,iBAIA,kBAAC,IAAD,CAAQE,QAAO,sBAAE,4BAAA7B,EAAA,sEACMK,aAAaqB,QAAQ,UAD3B,OACTC,EADS,OAEfH,QAAQC,IAAIE,GAFG,4CAAjB","file":"component---src-pages-ethers-page-js-ce8f9dcf33735b16c570.js","sourcesContent":["\nimport { message } from \"antd\";\nimport { ethers } from \"ethers\";\n\n// 工具，方法\nconst getEthereum = () => {\n  const win: any = window\n  const ethereum = win.ethereum\n  if (!ethereum) {\n    message.destroy()\n    message.error('未检测到ethereum工具')\n    return\n  }\n  return ethereum\n}\n// 链接钱包\nconst connectWallet = async () => {\n  try {\n    const ethereum = getEthereum()\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    const account = accounts[0];\n    localStorage.setItem('wallet', account)\n    return account\n  } catch (error) {\n    message.destroy()\n    message.warning('Unlock  Wallet, Please unlock your  Wallet to perform this action.')\n    return ''\n  }\n}\nconst listenAccountsChanged = async () => {\n  const ethereum = getEthereum()\n  if (!ethereum) return\n  await ethereum.on('accountsChanged', async (accounts: any) => {\n    const account = accounts[0];\n    localStorage.setItem('wallet', account)\n  })\n  await ethereum.on('chainChanged', async (chainId: any) => {\n    window.location.reload()\n    await window.history.go(0)\n  })\n}\nconst eths = {\n  getEthereum,\n  connectWallet,\n  listenAccountsChanged\n}\nexport default eths;","import { Button } from \"antd\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport eths from \"./../utils/eths\";\nconst EthersPage = () => {\n  const [walletAddress, setWalletAddress] = useState('')\n  useEffect(() => {\n    eths.listenAccountsChanged()\n  }, [])\n  useEffect(() => {\n    window.addEventListener('storage', walletChange)\n    return () => {\n      window.removeEventListener('storage', walletChange)\n    }\n  }, [])\n  const walletChange = async () => {\n    console.log('change');\n    const wallet = await localStorage.getItem('wallet')\n    setWalletAddress(wallet)\n  }\n  return (\n    <Layout title={'EthersPage'}>\n      {walletAddress}\n      <Button onClick={async () => {\n        const wallet = await eths.connectWallet()\n        setWalletAddress(wallet)\n      }}>connectWallet</Button>\n      <Button onClick={async () => {\n        const wallet = await localStorage.getItem('wallet')\n        console.log(wallet);\n      }}>localStorage</Button>\n    </Layout>\n  )\n}\n\nexport default EthersPage\n"],"sourceRoot":""}